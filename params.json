{
  "name": "Runr",
  "tagline": "a tidy simulation runner",
  "body": "<!-- README.md is generated from README.Rmd. Please edit that file -->\r\nrunr: a tidy simulation runner\r\n==============================\r\n\r\nrunr provides an opinionated wrapper to run simulations and recover tidy output.\r\n\r\nThe packages exports one function, `run`, which runs a function with some varying parameters, and some fixed parameters. `run`, expects the varying parameters in a data.frame and the fixed parameters in a list or environment. It returns the results in an data.frame that can be `cbind`-ed to the input data.frame.\r\n\r\n[![Travis-CI Build Status](https://travis-ci.org/ashander/runr.svg?branch=master)](https://travis-ci.org/ashander/runr) [![Coverage Status](https://img.shields.io/codecov/c/github/ashander/runr/master.svg)](https://codecov.io/github/ashander/runr?branch=master)\r\n\r\nExample usage:\r\n==============\r\n\r\n``` r\r\nrequire(devtools)\r\ndevtools::run_examples('.')\r\n#> Updating runr documentation\r\n#> Loading runr\r\n#> Running 2 example files in runr -------------------------------------------\r\n#> Loading runr\r\n#> Running examples in run.Rd ------------------------------------------------\r\n#> > \r\n#> > growth <- function(n, r, K, b) {\r\n#> +   # Ricker-like growth curve in n = log N\r\n#> +   n  + r - exp(n) / K - b\r\n#> + }\r\n#> > data <- expand.grid(\r\n#> +                     b = seq(0.01, 0.5, length.out=10),\r\n#> +                     K = exp(seq(0.1, 5, length.out=10)),\r\n#> +                     r = seq(0.5, 3.5, length.out=10)\r\n#> +                     )\r\n#> > initial_data = list(N0=0.9, T=5, reps=100)\r\n#> > \r\n#> > growth_runner <- function(r, K, b, ic) {\r\n#> +   n0 = ic$N0  \r\n#> +   T = ic$T\r\n#> +   reps = ic$reps\r\n#> +   out <- lapply(1:reps, function(i) {\r\n#> +                   for(t in 1:T) {\r\n#> +                     n0 <- growth(n0, r, K, b)\r\n#> +                     }\r\n#> +                   return(n0)\r\n#> +                     })\r\n#> +   data.frame(n_final = do.call(rbind, out))\r\n#> + }\r\n#> > \r\n#> > \r\n#> > output <- run(data, growth_runner, initial_data)\r\n#> > head(cbind(data, output))\r\n#>            b        K   r    n_final\r\n#> 1 0.01000000 1.105171 0.5 -0.6316763\r\n#> 2 0.06444444 1.105171 0.5 -0.6316763\r\n#> 3 0.11888889 1.105171 0.5 -0.6316763\r\n#> 4 0.17333333 1.105171 0.5 -0.6316763\r\n#> 5 0.22777778 1.105171 0.5 -0.6316763\r\n#> 6 0.28222222 1.105171 0.5 -0.6316763\r\n#> Loading runr\r\n```\r\n\r\nDetails\r\n=======\r\n\r\nBetter to install the package and do `require(runr); ?run`, but here's an ugly preview of the help file:\r\n\r\n``` r\r\ncat(readLines('man/run.Rd'), sep = '\\n')\r\n#> % Generated by roxygen2: do not edit by hand\r\n#> % Please edit documentation in R/run.r\r\n#> \\name{run}\r\n#> \\alias{run}\r\n#> \\title{Run a simulation function}\r\n#> \\usage{\r\n#> run(data, fun, fixed_parameters, ...)\r\n#> }\r\n#> \\arguments{\r\n#> \\item{data}{a data.frame (or tibble, in future)}\r\n#> \r\n#> \\item{fun}{a function}\r\n#> \r\n#> \\item{fixed_parameters}{an environment or list}\r\n#> \r\n#> \\item{...}{additional parameters passed to `fun`}\r\n#> }\r\n#> \\value{\r\n#> a data.frame including the columns of data and the return from `fun`\r\n#> }\r\n#> \\description{\r\n#> Run a simulation function\r\n#> }\r\n#> \\details{\r\n#> `fun` must have signature (a1, a2, <...>, aN, fixed_params, ...) where\r\n#>          1) N is the number of columns in data (the names of these arguments\r\n#>          don't matter). Note <...> elides intervening arguments and is NOT\r\n#>          R's ... parameter! 2) the ... parameter is optional 3) The function\r\n#>          must return a data.frame.\r\n#> }\r\n#> \\examples{\r\n#> growth <- function(n, r, K, b) {\r\n#>   # Ricker-like growth curve in n = log N\r\n#>   n  + r - exp(n) / K - b\r\n#> }\r\n#> data <- expand.grid(\r\n#>                     b = seq(0.01, 0.5, length.out=10),\r\n#>                     K = exp(seq(0.1, 5, length.out=10)),\r\n#>                     r = seq(0.5, 3.5, length.out=10)\r\n#>                     )\r\n#> initial_data = list(N0=0.9, T=5, reps=100)\r\n#> \r\n#> growth_runner <- function(r, K, b, ic) {\r\n#>   n0 = ic$N0  \r\n#>   T = ic$T\r\n#>   reps = ic$reps\r\n#>   out <- lapply(1:reps, function(i) {\r\n#>                   for(t in 1:T) {\r\n#>                     n0 <- growth(n0, r, K, b)\r\n#>                     }\r\n#>                   return(n0)\r\n#>                     })\r\n#>   data.frame(n_final = do.call(rbind, out))\r\n#> }\r\n#> \r\n#> \r\n#> output <- run(data, growth_runner, initial_data)\r\n#> head(cbind(data, output))\r\n#> }\r\n```\r\n\r\nInstall\r\n=======\r\n\r\n`devtools::install_github('ashander/runr')`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}